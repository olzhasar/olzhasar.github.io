<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Leetcode on Olzhas Arystanov</title><link>https://olzhasar.com/tags/leetcode/</link><description>Recent content in Leetcode on Olzhas Arystanov</description><generator>Hugo -- 0.135.0</generator><language>en-us</language><lastBuildDate>Sat, 20 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://olzhasar.com/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code vs LeetCode</title><link>https://olzhasar.com/posts/advent-of-code-vs-leetcode/</link><pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate><guid>https://olzhasar.com/posts/advent-of-code-vs-leetcode/</guid><description>&lt;p>I recently discovered the &lt;a href="https://adventofcode.com/">Advent of Code&lt;/a> project for myself and I absolutely loved it. At first glance, it seemed similar to solving &lt;code>Leetcode&lt;/code> problems. However, after trying it for a few days now I realized that I like the experience much more. In this short blog post I&amp;rsquo;ll try to break down main advantages that I see over &lt;code>Leetcode&lt;/code>:&lt;/p>
&lt;h3 id="no-online-editor">No online editor&lt;/h3>
&lt;p>You don&amp;rsquo;t have to use the poor built-in online editor. I can freely use my favorite &lt;code>Neovim&lt;/code> for this&lt;/p></description></item><item><title>A better way to prepare for your coding interviews</title><link>https://olzhasar.com/posts/a-better-way-to-prepare-for-your-coding-interviews/</link><pubDate>Fri, 19 May 2023 00:00:00 +0000</pubDate><guid>https://olzhasar.com/posts/a-better-way-to-prepare-for-your-coding-interviews/</guid><description>&lt;p>I recently started applying to Big Tech companies, and as a result, I ended up solving a lot of LeetCode problems (284 problems at the time of writing this blog post). During the preparation process, it became clear to me why so many developers argue about the broken state of the tech interviewing process. Solving LeetCode problems takes a significant amount of time and energy that could otherwise be spent on building projects. However, I believe that the main issue lies not with the tech interviews themselves, but rather with the preparation process.&lt;/p></description></item></channel></rss>