<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on</title><link>/tags/django/</link><description>Recent content in Django on</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 16 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimizing your Django tests</title><link>/posts/optimizing-your-django-tests/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>/posts/optimizing-your-django-tests/</guid><description>&lt;p>If you are working on a large Django project, you probably have lots of automated tests running as part of your CI/CD process. As long as tests run fast, everyone is happy. But as your application grows in complexity, your tests start to take more and more time to run and eventually become a real bottleneck. In this post, I will share some ideas that can help you optimize runtime of your test suite. I assume you are using &lt;strong>&lt;code>pytest&lt;/code>&lt;/strong>, but recommendations described in this post should be easily applicable to other runners as well.&lt;/p></description></item></channel></rss>